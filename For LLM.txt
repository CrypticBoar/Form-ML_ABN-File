I have a requirement to create a VASP file known as a ML_ABN file that contatins machine learning data gatahered for 
thousands of atomic configurations. For this purpose, I have thousands of single-point DFT calculations done in VASP 
with their OUTCAR files. By parsing this data, I need to create an ML_ABN file with information on all the local 
configurations using a Python script, which I have already created.I have attached the current ML_ABN file for you 
to get an idea of the ML_ABN file format.

Here is a summary of everything for you to understand divided into three topics:

1. Everything that the Script Does:

i.The script processes VASP outputs (POSCAR and OUTCAR files) to create an ML_ABN file with machine learning data 
for atomic configurations. Here is a summary of its key steps:

ii.Reading POSCAR File:
	Extracts comment, scale, cell vectors, atom types, and coordinates from the POSCAR file.
	Reads numeric representation of number of atoms of each type.

iii.Reading OUTCAR File:
	Extracts forces, total energy, and stress data from the OUTCAR file using regex patterns.

iv.Generating ML_ABN File Content:
	A. Constructs the header section of the ML_ABN file with:
		Version information.
		Number of configurations.
		Maximum number of atom types.
		List of atom types present.
		Maximum number of atoms in any configuration.
		Maximum number of atoms per atom type (summarized).
		Reference atomic energy.
		Atomic masses.
		Basis set information.
		Iterates through each configuration to:
		Assemble configuration-specific information:
		System name.
		Number of atom types.
		Total number of atoms.
		Atom types and their counts.
		Cell vectors.
		Atomic positions.
		Total energy.
		Forces acting on each atom.
		Stress components.
		Writing the Output:
	B. Writes the assembled ML_ABN content to a file named ML_ABN.
	
2. Format of the ML_ABN File
	The ML_ABN file has the following structure:
	
1.0 Version
**************************************************
The number of configurations
--------------------------------------------------
<num_configs>
**************************************************
The maximum number of atom type
--------------------------------------------------
<max_num_atomtypes>
**************************************************
The atom types in the data file
--------------------------------------------------
<atomtypes>
**************************************************
The maximum number of atoms per system
--------------------------------------------------
<max_num_atoms>
**************************************************
The maximum number of atoms per atom type
--------------------------------------------------
<max_atoms_per_atomtype_values>
**************************************************
Reference atomic energy (eV)
--------------------------------------------------
0.0
**************************************************
Atomic mass
--------------------------------------------------
<atomic_masses_values>
**************************************************
The numbers of basis sets per atom type
--------------------------------------------------
1
**************************************************
Basis set for Au
--------------------------------------------------
1 1
**************************************************

Configuration num. <1>
==================================================
System name
--------------------------------------------------
<System>
==================================================
The number of atom types
--------------------------------------------------
<unique_atom_types_count>
==================================================
The number of atoms
--------------------------------------------------
<total_num_atoms>
**************************************************
Atom types and atom numbers
--------------------------------------------------
 <atom_type> <count>
...
==================================================
Primitive lattice vectors (ang.)
--------------------------------------------------
<vector1>
<vector2>
<vector3>
==================================================
Atomic positions (ang.)
--------------------------------------------------
<position1>
<position2>
...
==================================================
Total energy (eV)
--------------------------------------------------
<energy>
==================================================
Forces (eV ang.^-1)
--------------------------------------------------
 <force1_x> <force1_y> <force1_z>
 <force2_x> <force2_y> <force2_z>
...
==================================================
Stress (kbar)
--------------------------------------------------
XX YY ZZ
--------------------------------------------------
 <stress_xx> <stress_yy> <stress_zz>
--------------------------------------------------
XY YZ ZX
--------------------------------------------------
 <stress_xy> <stress_yz> <stress_zx>
**************************************************
...
(repeats for each configuration)

3. Helpful Notes for an LLM Model (GPT) Starting to Work on the Script
File Handling:
	Ensure the POSCAR and OUTCAR files are in the current working directory.
	POSCAR files are named POSCAR_* and OUTCAR files are named OUTCAR_*.
	Make sure both files are correctly paired and sorted.

Regex Usage:
	Regex patterns are used to locate and extract forces, energy, and stress data from OUTCAR files.

Header Data Gathering:
	The script accumulates maximum numbers for certain properties across all configurations to generate a comprehensive header.
Atomic Type Counting:
	Each configuration independently calculates and lists its own atom types and their numbers (they can be different 
		from each other with respect to element types, numbers and cell sizes etc.)
Output Integrity:
	The script ensures that configuration-specific data is accurately reflected in the ML_ABN file.
	All floating-point numbers are rounded consistently (could be adjusted for precision if needed).
Potential Improvements:
	Error handling could be improved for file reading and parsing.
	Flexibility in extracting additional properties or handling different file formats could be added.
	Enhanced checks for file format consistency and completeness might be beneficial.